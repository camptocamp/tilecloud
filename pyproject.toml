[tool.black]
line-length = 110
target-version = ['py39']

[tool.mypy]
python_version = "3.9"
warn_redundant_casts = true
warn_unused_ignores = true
ignore_missing_imports = true
strict_optional = true
strict = true

[tool.isort]
known_first_party = "tilecloud"
profile = "black"
line_length = 110

[tool.poetry]
name = "tilecloud"
version = "0.0.0"
description = "Tools for managing tiles"
readme = "README.md"
authors = ["Camptocamp <info@camptocamp.com>"]
repository = "https://github.com/camptocamp/tilecloud"
license = "BSD-2-Clause"
keywords = ["gis", "tilecloud"]
packages = [{ include = "tilecloud" }]
classifiers = [
    "Development Status :: 6 - Mature",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: GIS",
    "Typing :: Typed",
]
include = ["tilecloud_chain/py.typed"]

[tool.poetry.scripts]
c2cciutils = "c2cciutils.scripts.main:main"
tc-copy = "tilecloud.scripts.tc_copy:main"
tc-delete = "tilecloud.scripts.tc_delete:main"
tc-info = "tilecloud.scripts.tc_info:main"
tc-mask = "tilecloud.scripts.tc_mask:main"
tc-mbtiles = "tilecloud.scripts.tc_mbtiles_create:main"
tc-mbtiles-info = "tilecloud.scripts.tc_mbtiles_info:main"
tc-redifined-bounds = "tilecloud.scripts.tc_refine_bounds:main"
tc-viewer = "tilecloud.scripts.tc_viewer:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
azure-storage-blob = { version = "12.23.1", optional = true }
azure-identity = { version = "1.18.0", optional = true }
boto3 = { version = "1.35.33", optional = true }
bottle = "0.13.1"
prometheus_client = { version = "0.21.0", optional = true }
Pillow = "10.4.0"
pyproj = "3.7.0"
pyramid = { version = "2.0.2", optional = true }
requests = "2.32.3"
redis = { version = "5.1.0", optional = true }
cryptography = "43.0.1"

[tool.poetry.extras]
azure = ["azure-storage-blob", "azure-identity"]
aws = ["boto3"]
wsgi = ["pyramid"]
redis = ["redis"]
prometheus = ["prometheus_client"]
all = ["azure-storage-blob", "azure-identity", "boto3", "pyramid", "redis", "prometheus_client"]

[tool.poetry.group.dev.dependencies]
prospector = { version = "1.12.0", extras = ["with_bandit", "with_mypy", "with_pyroma"] }
prospector-profile-duplicated = "1.6.0"
prospector-profile-utils = "1.8.0"
pytest = "8.3.3"
pytest-cov = "5.0.0"
types-boto = "2.49.18.20240806"
types-redis = "4.6.0.20241004"
types-requests = "2.32.0.20240914"
pycairo = "1.27.0"
Shapely = "2.0.6"
urllib3 = "2.2.3" # Lock the used version to avoid lock issue

[build-system]
requires = [
    "poetry-core>=1.3.0",
    "poetry-dynamic-versioning",
    "poetry-plugin-tweak-dependencies-version>=1.1.0",
    "poetry-plugin-tweak-dependencies-version",
    "poetry-plugin-drop-python-upper-constraint"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "version_branch" -%}
{{serialize_pep440(bump_version(base, 1 if env.get("IS_MASTER") == "TRUE" else 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"
